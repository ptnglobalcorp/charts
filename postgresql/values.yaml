global:
  postgresql:
    auth:
      postgresPassword: ""
      username: ""
      password: ""
      database: ""
      secretKeys:
        adminPasswordKey: ""
        userPasswordKey: ""
    service:
      ports:
        postgresql: ""

kubeVersion: ""
nameOverride: ""
fullnameOverride: ""
commonLabels: {}
commonAnnotations: {}

diagnosticMode:
  enabled: false

image:
  registry: docker.io
  repository: bitnami/postgresql
  tag: 17.2.0-debian-12-r10
  digest: ""
  pullPolicy: IfNotPresent
  debug: false

auth:
  enablePostgresUser: true
  postgresPassword: ""
  username: ""
  password: ""
  database: ""
  secretKeys:
    adminPasswordKey: postgres-password
    userPasswordKey: password
architecture: standalone

containerPorts:
  postgresql: 5432

audit:
  logHostname: false
  logConnections: false
  logDisconnections: false
  pgAuditLogCatalog: "off"
  clientMinMessages: error

ldap:
  enabled: false

postgresqlDataDir: /bitnami/postgresql/data
postgresqlSharedPreloadLibraries: "pgaudit"

shmVolume:
  enabled: true
  sizeLimit: ""

tls:
  enabled: false

primary:
  name: primary

  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  resourcesPreset: "nano"

  resources: {}

  containerSecurityContext:
    enabled: true
    seLinuxOptions: {}
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"

  hostIPC: false
  labels: {}
  podLabels: {}
  podAntiAffinityPreset: soft
  affinity: {}
  nodeSelector: {}
  tolerations: []

  updateStrategy:
    type: RollingUpdate
    rollingUpdate: {}

  pdb:
    create: true
    minAvailable: ""
    maxUnavailable: ""

  networkPolicy:
    enabled: true

  service:
    type: ClusterIP
    ports:
      postgresql: 5432
    sessionAffinity: None
    headless:
      annotations: {}

  persistence:
    enabled: true
    volumeName: "data"
    existingClaim: ""
    mountPath: /bitnami/postgresql
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 8Gi
    annotations: {}
    labels: {}
    selector: {}
    dataSource: {}

    dynamicVolumeProvisioning:
      enabled: false
      pvName: ""
      pvcName: ""
      localPath: ""
      nodeAffinity:
        key: ""
        value: ""

  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1001

  hostNetwork: false
  automountServiceAccountToken: false

serviceAccount:
  create: true
  name: ""
  automountServiceAccountToken: false
  annotations: {}